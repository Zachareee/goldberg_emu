# This is a basic workflow to help you get started with Actions

name: build

# Controls when the workflow will run
on:
  # Triggers the workflow on pull request events but only for the "main" branch
  push:
    branches: [ "master" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  windows-build:
    # The type of runner that the job will run on
    runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout
        uses: actions/checkout@v3

      - name: Increment version
        uses: reecetech/version-increment@2023.4.1
        id: version
        with:
          scheme: semver
          increment: patch

      - name: Installation
        run: |
            vcpkg install protobuf --triplet x86-windows-static
            vcpkg install protobuf --triplet x64-windows-static

      - name: Build
        run: |
            python generate_build_win_bat.py
            ./build_win_release_test.bat

      - name: Package
        run: |
            Compress-Archive release/* "goldberg-emulator-zachareee-${{ steps.version.outputs.version }}.zip" -CompressionLevel Optimal

      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "goldberg-emulator-zachareee-${{ steps.version.outputs.version }}.zip"
          replacesArtifacts: false
          allowUpdates: true
          generateReleaseNotes: true
          name: "Release v${{ steps.version.outputs.version }}"
          tag: "v${{ steps.version.outputs.version }}"
